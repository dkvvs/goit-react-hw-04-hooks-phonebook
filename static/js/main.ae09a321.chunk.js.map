{"version":3,"sources":["components/Filter/filter.module.css","components/ContactForm/ContactForm.js","types/index.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","hooks/useLocalStorage.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","ContactForm","onAddContact","onCheckContact","useState","name","setName","number","setNumber","handleChange","event","target","value","validateForm","trim","alert","reset","className","s","form","onSubmit","preventDefault","id","uuidv4","htmlFor","input","type","placeholder","onChange","autoFocus","ContactItem","PropTypes","string","isRequired","ContactListItem","onRemove","item","onClick","ContactList","contacts","length","map","contact","propTypes","arrayOf","shape","func","Filter","filter","search","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","INITIAL_STATE","App","setFilter","setContacts","visibleContacts","toLowerCase","includes","nameContact","isExistContact","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae09a321.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"filter_search__3Zsrs\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onAddContact, onCheckContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isValidateForm = validateForm(name, number);\n    if (!isValidateForm) {\n      return;\n    }\n    onAddContact({ id: uuidv4(), name, number });\n    reset();\n  };\n\n  const validateForm = (name, number) => {\n    if (!name.trim() || !number.trim()) {\n      alert('Для добавления контакта заполните поля Name и Number');\n      return false;\n    }\n    return onCheckContact(name);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"\">\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Введите имя контакта\"\n            onChange={handleChange}\n            autoFocus\n          />\n        </label>\n        <label htmlFor=\"\">\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"Введите номер контакта\"\n            onChange={handleChange}\n          />\n        </label>\n        <button>Add contact</button>\n      </form>\n    </div>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func,\n  onCheckContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport const ContactItem = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\nimport { ContactItem } from '../../types';\n\nexport default function ContactListItem({ id, name, number, onRemove }) {\n  return (\n    <li className={s.item}>\n      {name} : {number} <button onClick={() => onRemove(id)}>Delete</button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  ...ContactItem,\n  onRemove: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContactItem } from '../../types/index';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nexport default function ContactList({ contacts, onRemove }) {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          name={contact.name}\n          number={contact.number}\n          id={contact.id}\n          onRemove={onRemove}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactListItem.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape(ContactItem)),\n  onRemove: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './filter.module.css';\n\nexport default function Filter({ filter, onChange }) {\n  return (\n    <div>\n      <p className={s.search}>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { useState } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nconst INITIAL_STATE = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default function App() {\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useLocalStorage('contacts', INITIAL_STATE);\n\n  const handleAddNewContact = nameContact => {\n    setContacts([...contacts, nameContact]);\n  };\n\n  const handleCheckContact = name => {\n    const isExistContact = !!contacts.find(\n      contact => contact.name.trim() === name.trim(),\n    );\n    if (isExistContact) {\n      alert('Контакт с таким именем уже существует!');\n    }\n    return !isExistContact;\n  };\n\n  const handleRemoveContact = id =>\n    setContacts(contacts.filter(contact => contact.id !== id));\n\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n\n  const getVisibleContact = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const visibleContacts = getVisibleContact();\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm\n        onAddContact={handleAddNewContact}\n        onCheckContact={handleCheckContact}\n      />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChange={handleFilter} />\n      <ContactList contacts={visibleContacts} onRemove={handleRemoveContact} />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3GuGF\",\"input\":\"ContactForm_input__X94eX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1g6Fu\"};"],"sourceRoot":""}